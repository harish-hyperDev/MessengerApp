{"ast":null,"code":"import _toConsumableArray from\"F:\\\\CooL\\\\Websites\\\\chat-app\\\\mitai-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"F:\\\\CooL\\\\Websites\\\\chat-app\\\\mitai-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport'./App.css';import React,{useEffect,useState}from\"react\";import Button from'@mui/material/Button';// Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\nimport{FormControl,InputLabel,Input}from'@mui/material';import Message from'./Message';// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\nfunction App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([{username:'cool',text:'its cool'},{username:'diabala',text:'ara ara'}]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),username=_useState6[0],setUsername=_useState6[1];// useEffect is used for running a piece of code based on a condition  \nuseEffect(function(){setUsername(prompt('Enter your username'));},[]);// [] is condition, if left blank code will run only once when \"app\" component loads\n/* \n    so if we use the input variable value changes the \"code\" in useEffect will run\n    its really cool as \"input\" variable is a useState so \"input\" will change instaneously without any refresh and \"useEffect\" will run automatically as \"input\" is changing \n  */ // Your web app's Firebase configuration\n/*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */ // Initialize Firebase\n//const app = initializeApp(firebaseConfig);\nconsole.log(input);console.log(messages);var sendMessage=function sendMessage(event){// all the logic to send message\nevent.preventDefault();//for not refreshing the page for form\nsetMessages([].concat(_toConsumableArray(messages),[{username:username,text:input}]));setInput('');};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",null,\"GHOST Chat\"),/*#__PURE__*/React.createElement(\"h2\",null,\"Sup' \",username),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(FormControl,null,/*#__PURE__*/React.createElement(InputLabel,null,\"Enter message..\"),/*#__PURE__*/React.createElement(Input,{value:input,onChange:function onChange(event){return setInput(event.target.value);}}),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",disabled:!input,type:\"submit\",onClick:sendMessage},\"Send Message\"))),messages.map(function(message){return/*#__PURE__*/React.createElement(Message,{username:message.username,text:message.text})//<p>{message}</p>\n;}));}export default App;","map":{"version":3,"sources":["F:/CooL/Websites/chat-app/mitai-app/src/App.js"],"names":["React","useEffect","useState","Button","FormControl","InputLabel","Input","Message","App","input","setInput","username","text","messages","setMessages","setUsername","prompt","console","log","sendMessage","event","preventDefault","target","value","map","message"],"mappings":"8UAAA;AACA;AACA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA;AACA;AACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,KAAlC,KAA+C,eAA/C,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA;AACA;AAGA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAA0BN,QAAQ,CAAC,EAAD,CAAlC,wCAAOO,KAAP,eAAcC,QAAd,eACA,eAAgCR,QAAQ,CAAC,CACvC,CAACS,QAAQ,CAAE,MAAX,CAAmBC,IAAI,CAAE,UAAzB,CADuC,CAEvC,CAACD,QAAQ,CAAE,SAAX,CAAsBC,IAAI,CAAE,SAA5B,CAFuC,CAAD,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eAIA,eAAgCZ,QAAQ,CAAC,EAAD,CAAxC,yCAAOS,QAAP,eAAiBI,WAAjB,eAEA;AACAd,SAAS,CAAC,UAAM,CACdc,WAAW,CAACC,MAAM,CAAC,qBAAD,CAAP,CAAX,CACD,CAFQ,CAEN,EAFM,CAAT,CAEQ;AAER;AACF;AACA;AACA,IAjBe,CAoBb;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IA9Be,CAgCb;AACA;AAGAC,OAAO,CAACC,GAAR,CAAYT,KAAZ,EACAQ,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAEA,GAAMM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B;AACAA,KAAK,CAACC,cAAN,GAA0B;AAC1BP,WAAW,8BAAMD,QAAN,GAAgB,CAACF,QAAQ,CAAEA,QAAX,CAAqBC,IAAI,CAAEH,KAA3B,CAAhB,GAAX,CACAC,QAAQ,CAAC,EAAD,CAAR,CACD,CALD,CAOA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACE,2CADF,cAEE,sCAAUC,QAAV,CAFF,cAOE,6CACA,oBAAC,WAAD,mBACE,oBAAC,UAAD,wBADF,cAEE,oBAAC,KAAD,EAAO,KAAK,CAAEF,KAAd,CAAqB,QAAQ,CAAE,kBAAAW,KAAK,QAAIV,CAAAA,QAAQ,CAACU,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAZ,EAApC,EAFF,cAGE,oBAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,KAAK,CAAC,SAAlC,CAA4C,QAAQ,CAAE,CAACd,KAAvD,CAA8D,IAAI,CAAC,QAAnE,CAA4E,OAAO,CAAEU,WAArF,iBAHF,CADA,CAPF,CAkBIN,QAAQ,CAACW,GAAT,CAAa,SAAAC,OAAO,qBAClB,oBAAC,OAAD,EAAS,QAAQ,CAAEA,OAAO,CAACd,QAA3B,CAAqC,IAAI,CAAEc,OAAO,CAACb,IAAnD,EACA;AAFkB,EAApB,CAlBJ,CADF,CA2BD,CAED,cAAeJ,CAAAA,GAAf","sourcesContent":["//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button'\n// Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\nimport { FormControl, InputLabel, Input } from '@mui/material';\nimport Message from './Message';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([\n    {username: 'cool', text: 'its cool'},\n    {username: 'diabala', text: 'ara ara'},\n  ]);\n  const [username, setUsername] = useState('');\n\n  // useEffect is used for running a piece of code based on a condition  \n  useEffect(() => {\n    setUsername(prompt('Enter your username'));\n  }, [] ) // [] is condition, if left blank code will run only once when \"app\" component loads\n\n  /* \n    so if we use the input variable value changes the \"code\" in useEffect will run\n    its really cool as \"input\" variable is a useState so \"input\" will change instaneously without any refresh and \"useEffect\" will run automatically as \"input\" is changing \n  */\n\n\n  // Your web app's Firebase configuration\n  /*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */\n\n  // Initialize Firebase\n  //const app = initializeApp(firebaseConfig);\n\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage = (event) => {\n    // all the logic to send message\n    event.preventDefault();   //for not refreshing the page for form\n    setMessages( [...messages, {username: username, text: input} ]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>GHOST Chat</h1>\n      <h2>Sup' {username}</h2>\n\n      \n\n      {/*input field*/}\n      <form>\n      <FormControl>\n        <InputLabel>Enter message..</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n        <Button variant=\"contained\" color=\"primary\" disabled={!input} type='submit' onClick={sendMessage}>Send Message</Button>\n      </FormControl>                \n      </form>\n      \n      {/*messages*/}\n      {\n        \n        messages.map(message => (\n          <Message username={message.username} text={message.text} />\n          //<p>{message}</p>\n        ))\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}