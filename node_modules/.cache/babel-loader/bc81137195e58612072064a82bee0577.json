{"ast":null,"code":"var _jsxFileName = \"F:\\\\CooL\\\\Websites\\\\chat-app\\\\mitai-app\\\\src\\\\App.js\";\n//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button'; // Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\n\nimport { FormControl, InputLabel, Input } from '@mui/material';\nimport Message from './Message';\nimport db from './firebase'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([//{username: 'diablo', text: 'bo aki mayiro.. shamu nuga'},\n  {\n    username: 'hyperx',\n    text: 'owai moo'\n  }]);\n  const [username, setUsername] = useState(''); // useEffect is used for running a piece of code based on a condition  \n\n  useEffect(() => {\n    db.collection('messages').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n  useEffect(() => {\n    setUsername(prompt('Enter your username'));\n  }, []); // [] is condition, if left blank code will run only once when \"app\" component loads\n\n  /* \n    so if we use the input variable value changes the \"code\" in useEffect will run\n    its really cool as \"input\" variable is a useState so \"input\" will change instaneously without any refresh and \"useEffect\" will run automatically as \"input\" is changing \n  */\n  // Your web app's Firebase configuration\n\n  /*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */\n  // Initialize Firebase\n  //const app = initializeApp(firebaseConfig);\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage = event => {\n    // all the logic to send message\n    event.preventDefault(); //for not refreshing the page for form\n\n    setMessages([...messages, {\n      username: username,\n      text: input\n    }]);\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"GHOST Chat\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Sup' \", username), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Enter message..\"), /*#__PURE__*/React.createElement(Input, {\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !input,\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Send Message\"))), messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    username: username,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }) //<p>{message}</p>\n  ));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/CooL/Websites/chat-app/mitai-app/src/App.js"],"names":["React","useEffect","useState","Button","FormControl","InputLabel","Input","Message","db","App","input","setInput","messages","setMessages","username","text","setUsername","collection","onSnapshot","snapshot","docs","map","doc","data","prompt","console","log","sendMessage","event","preventDefault","target","value","message"],"mappings":"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","sourcesContent":["//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button'\n// Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\nimport { FormControl, InputLabel, Input } from '@mui/material';\nimport Message from './Message';\nimport db from './firebase';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([\n    //{username: 'diablo', text: 'bo aki mayiro.. shamu nuga'},\n    {username: 'hyperx', text: 'owai moo'}\n  ]);\n  const [username, setUsername] = useState('');\n\n  // useEffect is used for running a piece of code based on a condition  \n\n  useEffect(() => {\n    db.collection('messages').onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()))\n    });\n  }, [] )\n\n  useEffect(() => {\n    setUsername(prompt('Enter your username'));\n  }, [] ) // [] is condition, if left blank code will run only once when \"app\" component loads\n\n  /* \n    so if we use the input variable value changes the \"code\" in useEffect will run\n    its really cool as \"input\" variable is a useState so \"input\" will change instaneously without any refresh and \"useEffect\" will run automatically as \"input\" is changing \n  */\n\n\n  // Your web app's Firebase configuration\n  /*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */\n\n  // Initialize Firebase\n  //const app = initializeApp(firebaseConfig);\n\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage = (event) => {\n    // all the logic to send message\n    event.preventDefault();   //for not refreshing the page for form\n    setMessages( [...messages, {username: username, text: input} ]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>GHOST Chat</h1>\n      <h2>Sup' {username}</h2>\n\n      \n\n      {/*input field*/}\n      <form>\n      <FormControl>\n        <InputLabel>Enter message..</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n        <Button variant=\"contained\" color=\"primary\" disabled={!input} type='submit' onClick={sendMessage}>Send Message</Button>\n      </FormControl>                \n      </form>\n      \n      {/*messages*/}\n      {\n        \n        messages.map(message => (\n          <Message username={username} message={message} />\n          //<p>{message}</p>\n        ))\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}