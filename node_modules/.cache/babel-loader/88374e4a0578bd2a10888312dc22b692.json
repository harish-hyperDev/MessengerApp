{"ast":null,"code":"var _jsxFileName = \"F:\\\\CooL\\\\Websites\\\\chat-app\\\\mitai-app\\\\src\\\\App.js\";\n//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button'; // Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\n\nimport { FormControl, InputLabel, Input } from '@mui/material';\nimport Message from './Message'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(['Hi']);\n  const [username, setUsername] = useState['']; // useEffect is used for running a piece of code based on a condition  \n\n  useEffect(() => {}, [input]); // [] is condition, if left blank code will run only once when app component loads\n  // so here whenever the input variable value changes the \"code in \n  // Your web app's Firebase configuration\n\n  /*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */\n  // Initialize Firebase\n  //const app = initializeApp(firebaseConfig);\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage = event => {\n    // all the logic to send message\n    event.preventDefault(); //for not refreshing the page for form\n\n    setMessages([...messages, input]);\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"GHOST Chat\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Enter message..\"), /*#__PURE__*/React.createElement(Input, {\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !input,\n    type: \"submit\",\n    onClick: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Send Message\"))), messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    text: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }) //<p>{message}</p>\n  ));\n}\n\nexport default App;","map":{"version":3,"sources":["F:/CooL/Websites/chat-app/mitai-app/src/App.js"],"names":["React","useEffect","useState","Button","FormControl","InputLabel","Input","Message","App","input","setInput","messages","setMessages","username","setUsername","console","log","sendMessage","event","preventDefault","target","value","map","message"],"mappings":";AAAA;AACA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AACA;;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,KAAlC,QAA+C,eAA/C;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;;AAGA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,CAAC,IAAD,CAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CAJa,CAMb;;AACAD,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,CAACQ,KAAD,CAFM,CAAT,CAPa,CASA;AAEb;AAEA;;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AAEA,QAAMM,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAF6B,CAEH;;AAC1BP,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,KAAd,CAAD,CAAX;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAES,KAAK,IAAIR,QAAQ,CAACQ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,QAAQ,EAAE,CAACZ,KAAvD;AAA8D,IAAA,IAAI,EAAC,QAAnE;AAA4E,IAAA,OAAO,EAAEQ,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADA,CANF,EAiBIN,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBAClB,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,CAElB;AAFF,GAjBJ,CADF;AA0BD;;AAED,eAAef,GAAf","sourcesContent":["//import logo from './logo.svg';\n//import { initializeApp } from \"firebase/app\";\nimport './App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button'\n// Import the functions you need from the SDKs you need\n//import { initializeApp } from \"firebase/app\";\nimport { FormControl, InputLabel, Input } from '@mui/material';\nimport Message from './Message';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\nfunction App() {\n\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState(['Hi']);\n  const [username, setUsername] = useState[''];\n\n  // useEffect is used for running a piece of code based on a condition  \n  useEffect(() => {\n\n  }, [input] ) // [] is condition, if left blank code will run only once when app component loads\n\n  // so here whenever the input variable value changes the \"code in \n\n  // Your web app's Firebase configuration\n  /*\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCfUQrKu7eNxE9C8baGIAgMMIl2L4icsew\",\n    authDomain: \"mitai-app.firebaseapp.com\",\n    projectId: \"mitai-app\",\n    storageBucket: \"mitai-app.appspot.com\",\n    messagingSenderId: \"835987929957\",\n    appId: \"1:835987929957:web:44190dabb33940728c3f8c\"\n  };\n  */\n\n  // Initialize Firebase\n  //const app = initializeApp(firebaseConfig);\n\n\n  console.log(input);\n  console.log(messages);\n\n  const sendMessage = (event) => {\n    // all the logic to send message\n    event.preventDefault();   //for not refreshing the page for form\n    setMessages([...messages, input]);\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>GHOST Chat</h1>\n\n      \n\n      {/*input field*/}\n      <form>\n      <FormControl>\n        <InputLabel>Enter message..</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n        <Button variant=\"contained\" color=\"primary\" disabled={!input} type='submit' onClick={sendMessage}>Send Message</Button>\n      </FormControl>                \n      </form>\n      \n      {/*messages*/}\n      {\n        \n        messages.map(message => (\n          <Message text={message} />\n          //<p>{message}</p>\n        ))\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}